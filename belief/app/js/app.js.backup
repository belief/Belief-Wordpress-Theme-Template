"use strict";

require.config({
    baseUrl: the_js_reference.path,
    paths: {
        jquery: [
          'https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js',
          'vendor/jquery-1.11.0.min.js'
        ],
        jqueryui: [
          'https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.1/jquery-ui.min.js',
        ],
        modernizr: 'vendor/modernizr',
        fastclick: 'vendor/fastclick',
        froogaloop: 'vendor/froogaloop',
        history: 'vendor/history',
        infinitescroll: 'vendor/infinitescroll',
        isotope: 'vendor/isotope',
        mediaelement: 'vendor/mediaelement',
        _common: 'modules/_common',
    },
    shim: {
      'jquery': {
          exports: '$'
      },
      'mediaelement' : ['jquery']
    }
});

define(['jquery'], function($) {

  var $win = $(window),
      $doc = $(document),
      featureNames = [
        'nav'
      ],
      features = {},
      featureQueue = [];

  // checking for any data features and loading them
  function loadFeatures() {
    featureQueue = [];

    // initialize all required feature scripts based off of data-feature attribute of an element
    // Require.js will not duplicate http requests for modules
    $.each(featureNames, function(i, name) {
      if ( $('*[data-feature="' + name +'"]').length ) {
        console.log('load _' + name);
        featureQueue.push('_' + name);
      }
    });

    // require module and initialize
    require(featureQueue, function() {
      for ( var i = 0; i < arguments.length; i++ ) {
        var feature = arguments[i],
            featureName = featureQueue[i];

        features[featureName] = feature;
        feature.init($win, $doc);
      }
    });
  }

  // destroy any features to clean event handler stack
  function destroyFeatures() {
    $.each(features, function(name, feature) {
      console.log('destroy _' + name);
      feature.destroy();
    });
  }

  return {
    init: function($w, $d) {
      _common.init($win, $doc);
      loadFeatures();
      alert('s');

      $win.on('preRequest', destroyFeatures);
      $win.on('postRequest', loadFeatures);
    },
  };

});
